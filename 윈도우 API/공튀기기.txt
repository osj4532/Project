// 공 튀기기 블럭 만들기 5개; 블럭 배열 재시작 가능(setimer 사용)
#include <windows.h>
#include <time.h>

LRESULT CALLBACK WndProc(HWND hwnd, UINT iMsg,
	WPARAM wParam, LPARAM lParam);


LPCTSTR lpszClass = TEXT("Menu");

int WINAPI WinMain(HINSTANCE hInstance, HINSTANCE hPrevInstance,
	LPSTR lpszCmdLine, int nCmdShow)
{
	HWND	hwnd;
	MSG		msg;
	WNDCLASS WndClass;
	WndClass.style = CS_HREDRAW, CS_VREDRAW;
	WndClass.lpfnWndProc = WndProc;
	WndClass.cbClsExtra = 0;
	WndClass.cbWndExtra = 0;
	WndClass.hInstance = hInstance;
	WndClass.hIcon = LoadIcon(NULL, IDI_APPLICATION);
	WndClass.hCursor = LoadCursor(NULL, IDC_ARROW);
	WndClass.hbrBackground = (HBRUSH)GetStockObject(LTGRAY_BRUSH);
	WndClass.lpszMenuName = NULL;
	WndClass.lpszClassName = lpszClass;
	RegisterClass(&WndClass);

	hwnd = CreateWindow(lpszClass,
		lpszClass,
		WS_OVERLAPPEDWINDOW,
		0,//CW_USEDEFAULT,
		0,//1CW_USEDEFAULT,
		995,
		700,
		NULL,
		NULL,
		hInstance,
		NULL
	);
	ShowWindow(hwnd, nCmdShow);
	UpdateWindow(hwnd);

	while (GetMessage(&msg, NULL, 0, 0))
	{
		TranslateMessage(&msg);
		DispatchMessage(&msg);
	}
	return (int)msg.wParam;
}

LRESULT CALLBACK WndProc(HWND hwnd, UINT iMsg,   //  ,메시지의 종류(마우스, 키보드), 
	WPARAM wParam, LPARAM lParam)              //  메시지의 정보(키보드의 무슨 키가 눌렸는가), 마우스가 움직였을때 좌표
{												// LParam = unsigned int (32비트)  0~15 x좌표 16~31y좌표    LOWORD(lParam)x좌표 HIWORD(lParam)y좌표
	HDC hdc;
	PAINTSTRUCT ps;
	static COLORREF fColor;
	static int xblc,yblc;
	static char ch;  //static 함수가 끝나도 이전값을 그대로 가지고 있다.
	static int xloc, yloc, w, z;// 공
	static int bx, by;  //막대기의 좌표
	static int j, k;  //막대 움직이는 변수
	static int xblock[5][5], yblock[5][5];

	switch (iMsg)
	{
	case WM_CREATE:           //프로그램이 시작되면 무조건 한번 실행된다. (초기화가 필요한 것들은 다 여기에 넣는다.)
		fColor = RGB(0, 0, 0);   //R, G, B   255으로 한바이트로 표현
		xloc = 450; //공 x좌표 초기값
		yloc = 625;//공 y좌표 초기값
		w = z = 0; // 벽에 부딫친걸 확인
		xblc = 100;
		yblc = 0;
		//ch[cnt] = 0;
		bx = 500; // 막대 초기 x좌표
		by = 635; // 막대 초기 y좌표

		for(int i=0;i<5;i++)
		{
			for(int c=0;c<5;c++)
			{
				xblock[i][c] = xblc;
				xblc = xblc + 195;
				yblock[i][c] = yblc;
			}
			xblc =100;
			yblc = yblc+20;
		}
		SetTimer(hwnd, 1, 100, NULL);   // 윈도우 이름, 시계번호 , 몇초마다 울릴건지, ???
		break;
	case WM_TIMER:

		if (w == 0)
			xloc = xloc + 30;
		else if (w == 1)
			xloc = xloc - 30;

		if (z == 0)
			yloc = yloc + 15;
		else if (z == 1)
			yloc = yloc - 15;

		if (xloc >= 960)
			w = 1;
		else if (xloc <= 0)
			w = 0;

		for(int i=0; i<5;i++)
		{
			for(int c=0;c<5;c++)
			{
				if(abs(xblock[i][c]-xloc)<100 && abs(yblock[i][c]-yloc)<11)
				{
					xblock[i][c] = yblock[i][c] = 1000000000;
					z=0;
				}
			}
		}

		
		  
		

		if (yloc >= 650)
		{
			KillTimer(hwnd, 1); //바닥에 닿으면 죽음
			MessageBox(hwnd,"Continue? \nPRESS ENTER \nAND PRESS Y", "GAME OVER", MB_OK);
								//z = 1;
		}
		else if (yloc <= 0)
			z = 0;

		else if (abs(bx - xloc)<51 && abs(by - yloc)<11) // 막대에 닿으면 올라감
				z = 1;

	


		InvalidateRect(hwnd, NULL, TRUE);
		break;
	case WM_LBUTTONDOWN:
		//x = LOWORD(lParam);
		//y = HIWORD(lParam);
		fColor = RGB(0, 255, 255);
		InvalidateRect(hwnd, NULL, TRUE);
		break;
	case WM_LBUTTONUP:
		fColor = RGB(0, 0, 0);
		InvalidateRect(hwnd, NULL, TRUE);
		break;
	case WM_RBUTTONDOWN:
		fColor = RGB(255, 0, 255);
		InvalidateRect(hwnd, NULL, TRUE);
		break;
	case WM_RBUTTONUP:
		fColor = RGB(255, 0, 0);
		InvalidateRect(hwnd, NULL, TRUE);
		break;
	case WM_CHAR:                    // 키보드
		ch = wParam;
		if (ch == 'j')
			bx -= 10;
		else if (ch == 'k')
			bx += 10;
		else if (ch == 'y')
		{
			bx = 500; // 막대 초기 x좌표
			by = 635; // 막대 초기 y좌표
			xloc = 500; //공 x좌표 초기값
			yloc = 620;//공 y좌표 초기값
			xblc = 100;//블럭 x좌표 초기값
			yblc = 0; // 블럭 y좌표 초기값
			for(int i=0;i<5;i++)
			{
				for(int c=0;c<5;c++)
				{
					xblock[i][c] = xblc;
					xblc = xblc + 195;
					yblock[i][c] = yblc;
				}
				xblc =100;
				yblc = yblc+20;
			}
			SetTimer(hwnd, 1, 100, NULL);
		}
		InvalidateRect(hwnd, NULL, TRUE);// 메시지가 생긴다.(WM_PAINT)
		break;
	case WM_PAINT:                   //화면에 보이는 부분
		hdc = BeginPaint(hwnd, &ps);
		SetTextColor(hdc, fColor);
		for(int i=0;i<5;i++)
		{
			for(int c=0;c<5;c++)
				Rectangle(hdc, xblock[i][c]-100, yblock[i][c], xblock[i][c] + 100, yblock[i][c] + 20);  //사각형 출력
		}
		Rectangle(hdc, bx-50, by, bx + 50, by + 20);  //사각형 출력
		Ellipse(hdc,xloc-5,yloc-5,xloc+5,yloc+5);    //원 출력
		EndPaint(hwnd, &ps);
		break;
	case WM_DESTROY:                  //프로그램이 끝날때 무조건 한번 실행된다. (자원의 반환을 한다.)
		PostQuitMessage(0);
		break;
	}
	return DefWindowProc(hwnd, iMsg, wParam, lParam);
}